[{"path":"/articles/Getting-Started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting started with MuData for Seurat","text":"Multimodal data format — MuData — introduced address need cross-platform standard sharing large-scale multimodal omics data. Importantly, develops ideas compatible AnnData standard storing raw derived data unimodal datasets. R, multimodal datasets can stored Seurat objects. MuDataSeurat package demonstrates data can read MuData files (H5MU) Seurat objects well information Seurat objects can saved H5MU files.","code":""},{"path":"/articles/Getting-Started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting started with MuData for Seurat","text":"recent MuDataSeurat build can installed GitHub: purpose tutorial, use SeuratData obtain data form Seurat objects:","code":"library(remotes) remotes::install_github(\"PMBio/MuDataSeurat\") devtools::install_github('satijalab/seurat-data')"},{"path":"/articles/Getting-Started.html","id":"loading-libraries","dir":"Articles","previous_headings":"","what":"Loading libraries","title":"Getting started with MuData for Seurat","text":"","code":"library(MuDataSeurat) library(Seurat) suppressWarnings(library(SeuratData))  library(hdf5r)"},{"path":"/articles/Getting-Started.html","id":"writing-h5mu-files","dir":"Articles","previous_headings":"","what":"Writing H5MU files","title":"Getting started with MuData for Seurat","text":"’ll use Seurat object distributed via SeuratData: First, make variable names unique across modalities: can use WriteH5MU() write contents cbmc object H5MU file:","code":"suppressWarnings(InstallData(\"cbmc\")) data(\"cbmc\") cbmc #> An object of class Seurat  #> 20511 features across 8617 samples within 2 assays  #> Active assay: RNA (20501 features, 0 variable features) #>  1 other assay present: ADT # Append -ADT to feature names in the ADT assay adt_counts <- cbmc[[\"ADT\"]]@counts rownames(adt_counts) <- paste(rownames(adt_counts), \"ADT\", sep = \"-\") adt_data <- cbmc[[\"ADT\"]]@data rownames(adt_data) <- rownames(adt_counts)  adt <- CreateAssayObject(counts = adt_counts) adt@data <- adt_data  cbmc_u <- CreateSeuratObject(cbmc[[\"RNA\"]]) cbmc_u[[\"ADT\"]] <- adt DefaultAssay(cbmc_u) <- \"ADT\" cbmc_u #> An object of class Seurat  #> 20511 features across 8617 samples within 2 assays  #> Active assay: ADT (10 features, 0 variable features) #>  1 other assay present: RNA WriteH5MU(cbmc_u, \"cbmc.h5mu\") #> [1] TRUE"},{"path":"/articles/Getting-Started.html","id":"reading-h5mu-files","dir":"Articles","previous_headings":"","what":"Reading H5MU files","title":"Getting started with MuData for Seurat","text":"can manually check top level structure file: dig deeper file:","code":"h5 <- H5File$new(\"cbmc.h5mu\", mode = \"r\") h5 #> Class: H5File #> Filename: /home/runner/work/MuDataSeurat/MuDataSeurat/vignettes/cbmc.h5mu #> Access type: H5F_ACC_RDONLY #> Attributes: encoding-type, encoding-version, encoder, encoder-version #> Listing: #>  name  obj_type dataset.dims dataset.type_class #>   mod H5I_GROUP         <NA>               <NA> #>   obs H5I_GROUP         <NA>               <NA> #>  obsp H5I_GROUP         <NA>               <NA> #>   uns H5I_GROUP         <NA>               <NA> #>   var H5I_GROUP         <NA>               <NA> h5[[\"mod\"]] #> Class: H5Group #> Filename: /home/runner/work/MuDataSeurat/MuDataSeurat/vignettes/cbmc.h5mu #> Group: /mod #> Listing: #>  name  obj_type dataset.dims dataset.type_class #>   ADT H5I_GROUP         <NA>               <NA> #>   RNA H5I_GROUP         <NA>               <NA> h5$close()"},{"path":"/articles/Getting-Started.html","id":"creating-seurat-objects-from-h5mu-files","dir":"Articles","previous_headings":"Reading H5MU files","what":"Creating Seurat objects from H5MU files","title":"Getting started with MuData for Seurat","text":"package provides ReadH5MU create object data H5MU file. Since H5MU structure designed accommodate structured information Seurat, data read. instance, Seurat support loading multimodal embeddings pairwise graphs. Importantly, recover information original Seurat object:","code":"cbmc_r <- ReadH5MU(\"cbmc.h5mu\") #> Warning in missing_on_read(\"/varp\", \"pairwise annotation of variables\"): Missing #> on read: /varp. Seurat does not support pairwise annotation of variables. cbmc_r #> An object of class Seurat  #> 20511 features across 8617 samples within 2 assays  #> Active assay: ADT (10 features, 0 variable features) #>  1 other assay present: RNA head(cbmc_u@meta.data[,1:4]) #>                     orig.ident nCount_RNA nFeature_RNA nCount_ADT #> CTGTTTACACCGCTAG SeuratProject      18224          910       1540 #> CTCTACGGTGTGGCTC SeuratProject      21210         1410       5216 #> AGCAGCCAGGCTCATT SeuratProject      19970         1007       1539 #> GAATAAGAGATCCCAT SeuratProject      21842          995       1007 #> GTGCATAGTCATGCAT SeuratProject      17679         1046       1642 #> TACACGACACATCCGG SeuratProject      18712          998       1164 head(cbmc_r@meta.data[,1:4]) #>                     orig.ident nCount_ADT nFeature_ADT nCount_RNA #> CTGTTTACACCGCTAG SeuratProject       1540           10      18224 #> CTCTACGGTGTGGCTC SeuratProject       5216           10      21210 #> AGCAGCCAGGCTCATT SeuratProject       1539           10      19970 #> GAATAAGAGATCCCAT SeuratProject       1007           10      21842 #> GTGCATAGTCATGCAT SeuratProject       1642           10      17679 #> TACACGACACATCCGG SeuratProject       1164           10      18712"},{"path":"/articles/Getting-Started.html","id":"h5ad-files","dir":"Articles","previous_headings":"","what":"H5AD files","title":"Getting started with MuData for Seurat","text":"Seurat object contains single modality (assay), can written H5AD file. demonstration, ’ll use Seurat object scRNA-seq counts distributed via SeuratDisk: can use WriteH5AD() write contents pbmc3k object H5AD file since dataset contains single modality (assay): data can retrieved H5AD file ReadH5AD:","code":"suppressWarnings(InstallData(\"pbmc3k\")) data(\"pbmc3k\") pbmc3k #> An object of class Seurat  #> 13714 features across 2700 samples within 1 assay  #> Active assay: RNA (13714 features, 0 variable features) WriteH5AD(pbmc3k, \"pbmc3k.h5ad\") #> [1] TRUE pbmc3k_r <- ReadH5AD(\"pbmc3k.h5ad\") #> Warning: Keys should be one or more alphanumeric characters followed by an #> underscore, setting key from rna to rna_ pbmc3k_r #> An object of class Seurat  #> 13714 features across 2700 samples within 1 assay  #> Active assay: RNA (13714 features, 0 variable features)"},{"path":"/articles/Getting-Started.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Getting started with MuData for Seurat","text":"Muon: multimodal omics analysis framework preprint mudata (Python) documentation muon documentation web page","code":""},{"path":"/articles/Getting-Started.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Getting started with MuData for Seurat","text":"","code":"sessionInfo() #> R version 4.1.2 (2021-11-01) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 20.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 #> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] hdf5r_1.3.5             pbmc3k.SeuratData_3.1.4 cbmc.SeuratData_3.1.4   #> [4] SeuratData_0.2.1        SeuratObject_4.0.4      Seurat_4.0.5            #> [7] MuDataSeurat_0.0.0.9000 BiocStyle_2.22.0        #>  #> loaded via a namespace (and not attached): #>   [1] Rtsne_0.15            colorspace_2.0-2      deldir_1.0-6          #>   [4] ellipsis_0.3.2        ggridges_0.5.3        rprojroot_2.0.2       #>   [7] fs_1.5.1              spatstat.data_2.1-0   leiden_0.3.9          #>  [10] listenv_0.8.0         bit64_4.0.5           ggrepel_0.9.1         #>  [13] fansi_0.5.0           codetools_0.2-18      splines_4.1.2         #>  [16] cachem_1.0.6          knitr_1.36            polyclip_1.10-0       #>  [19] jsonlite_1.7.2        ica_1.0-2             cluster_2.1.2         #>  [22] png_0.1-7             uwot_0.1.11           spatstat.sparse_2.0-0 #>  [25] shiny_1.7.1           sctransform_0.3.2     BiocManager_1.30.16   #>  [28] compiler_4.1.2        httr_1.4.2            Matrix_1.3-4          #>  [31] fastmap_1.1.0         lazyeval_0.2.2        cli_3.1.0             #>  [34] later_1.3.0           htmltools_0.5.2       tools_4.1.2           #>  [37] igraph_1.2.9          gtable_0.3.0          glue_1.5.1            #>  [40] RANN_2.6.1            reshape2_1.4.4        dplyr_1.0.7           #>  [43] rappdirs_0.3.3        Rcpp_1.0.7            scattermore_0.7       #>  [46] jquerylib_0.1.4       pkgdown_2.0.1         vctrs_0.3.8           #>  [49] nlme_3.1-153          lmtest_0.9-39         xfun_0.28             #>  [52] stringr_1.4.0         globals_0.14.0        mime_0.12             #>  [55] miniUI_0.1.1.1        lifecycle_1.0.1       irlba_2.3.5           #>  [58] goftest_1.2-3         future_1.23.0         MASS_7.3-54           #>  [61] zoo_1.8-9             scales_1.1.1          spatstat.core_2.3-2   #>  [64] ragg_1.2.0            promises_1.2.0.1      spatstat.utils_2.2-0  #>  [67] parallel_4.1.2        RColorBrewer_1.1-2    yaml_2.2.1            #>  [70] memoise_2.0.1         reticulate_1.22       pbapply_1.5-0         #>  [73] gridExtra_2.3         ggplot2_3.3.5         sass_0.4.0            #>  [76] rpart_4.1-15          stringi_1.7.6         desc_1.4.0            #>  [79] rlang_0.4.12          pkgconfig_2.0.3       systemfonts_1.0.3     #>  [82] matrixStats_0.61.0    evaluate_0.14         lattice_0.20-45       #>  [85] tensor_1.5            ROCR_1.0-11           purrr_0.3.4           #>  [88] patchwork_1.1.1       htmlwidgets_1.5.4     bit_4.0.4             #>  [91] cowplot_1.1.1         tidyselect_1.1.1      parallelly_1.29.0     #>  [94] RcppAnnoy_0.0.19      plyr_1.8.6            magrittr_2.0.1        #>  [97] bookdown_0.24         R6_2.5.1              generics_0.1.1        #> [100] mgcv_1.8-38           pillar_1.6.4          fitdistrplus_1.1-6    #> [103] abind_1.4-5           survival_3.2-13       tibble_3.1.6          #> [106] future.apply_1.8.1    crayon_1.4.2          KernSmooth_2.23-20    #> [109] utf8_1.2.2            spatstat.geom_2.3-0   plotly_4.10.0         #> [112] rmarkdown_2.11        grid_4.1.2            data.table_1.14.2     #> [115] digest_0.6.29         xtable_1.8-4          tidyr_1.1.4           #> [118] httpuv_1.6.3          textshaping_0.3.6     munsell_0.5.0         #> [121] viridisLite_0.4.0     bslib_0.3.1"},{"path":"/articles/PBMC-CITE-seq.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"CITE-seq data with MuData and Seurat","text":"CITE-seq data provide RNA surface protein counts cells. different workflows analyse data R Seurat CiteFuse. tutorial shows data stored MuData (H5MU) files can read integrated Seurat-based workflows.","code":""},{"path":"/articles/PBMC-CITE-seq.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"CITE-seq data with MuData and Seurat","text":"recent MuDataSeurat build can installed GitHub:","code":"library(remotes) remotes::install_github(\"PMBio/MuDataSeurat\")"},{"path":"/articles/PBMC-CITE-seq.html","id":"loading-libraries","dir":"Articles","previous_headings":"","what":"Loading libraries","title":"CITE-seq data with MuData and Seurat","text":"","code":"library(MuDataSeurat) library(Seurat)"},{"path":"/articles/PBMC-CITE-seq.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading data","title":"CITE-seq data with MuData and Seurat","text":"tutorial, use subset cells features output CITE-seq integration muon. example dataset can downloaded file H5MU format, deserialised create Seurat object: , pbmc full-featured Seurat object can used downstream analysis workflows.","code":"# Download file into a temporary directory fdir <- tempdir() mdata_path <- file.path(fdir, \"minipbcite.h5mu\") download.file(url=\"https://github.com/gtca/h5xx-datasets/blob/main/datasets/minipbcite.h5mu?raw=true\", destfile=mdata_path)  pbmc <- ReadH5MU(mdata_path) #> Warning in missing_on_read(\"/var\", \"global variables metadata\"): Missing on #> read: /var. Seurat does not support global variables metadata. #> Warning: Feature names cannot have underscores ('_'), replacing with dashes #> ('-') #> Warning in missing_on_read(\"/varp\", \"pairwise annotation of variables\"): Missing #> on read: /varp. Seurat does not support pairwise annotation of variables. #> Warning: Feature names cannot have underscores ('_'), replacing with dashes #> ('-') #> Warning: No columnames present in cell embeddings, setting to 'MOFA_1:30' #> Warning: Keys should be one or more alphanumeric characters followed by an #> underscore, setting key from MOFA_UMAP_ to MOFAUMAP_ #> Warning: All keys should be one or more alphanumeric characters followed by an #> underscore '_', setting key to MOFAUMAP_ #> Warning: No columnames present in cell embeddings, setting to 'MOFAUMAP_1:2' #> Warning: No columnames present in cell embeddings, setting to 'UMAP_1:2' #> Warning: Keys should be one or more alphanumeric characters followed by an #> underscore, setting key from WNN_UMAP_ to WNNUMAP_ #> Warning: All keys should be one or more alphanumeric characters followed by an #> underscore '_', setting key to WNNUMAP_ #> Warning: No columnames present in cell embeddings, setting to 'WNNUMAP_1:2' #> Warning: No columnames present in cell embeddings, setting to 'protpca_1:31' #> Warning: No columnames present in cell embeddings, setting to 'protumap_1:2' #> Warning: No columnames present in cell embeddings, setting to 'rnapca_1:50' #> Warning: No columnames present in cell embeddings, setting to 'rnaumap_1:2' pbmc #> An object of class Seurat  #> 56 features across 411 samples within 2 assays  #> Active assay: prot (29 features, 29 variable features) #>  1 other assay present: rna #>  8 dimensional reductions calculated: MOFA, MOFA_UMAP, UMAP, WNN_UMAP, protpca, protumap, rnapca, rnaumap"},{"path":"/articles/PBMC-CITE-seq.html","id":"visualising-data","dir":"Articles","previous_headings":"","what":"Visualising data","title":"CITE-seq data with MuData and Seurat","text":"Importantly, data can now plotted Seurat.","code":"Idents(pbmc) <- \"celltype\" DimPlot(pbmc, reduction = \"WNN_UMAP\")"},{"path":"/articles/PBMC-CITE-seq.html","id":"markers","dir":"Articles","previous_headings":"Visualising data","what":"Markers","title":"CITE-seq data with MuData and Seurat","text":"Cells can coloured expression level plotted selected latent space:  RNA expression different celltypes (genes subset pre-selected celltype markers):  Naïve/memory T cell surface protein expression:","code":"DefaultAssay(pbmc) <- \"rna\" DimPlot(pbmc, reduction = \"MOFA_UMAP\", label = TRUE, repel = TRUE) + NoLegend() +  FeaturePlot(pbmc, features = \"MS4A1\", reduction = \"MOFA_UMAP\") rna_features <- c(\"IRF8\", \"FCGR3A\", \"CD14\", \"MS4A1\", \"IGHD\",                    \"KLRC2\", \"NKG7\", \"CCL5\", \"CD8B\", \"IL2RA\", \"IL7R\") DotPlot(pbmc, features = rna_features) + RotatedAxis() DefaultAssay(pbmc) <- \"prot\" prot_features <- c(\"CD3-TotalSeqB\", \"CD45RA-TotalSeqB\", \"CD45RO-TotalSeqB\") t_cells <- c(\"CD4+ naïve T\", \"CD4+ memory T\", \"Treg\",               \"CD8+ naïve T\", \"CD8+ memory T\") VlnPlot(pbmc[,pbmc@meta.data$celltype %in% t_cells],          features = prot_features, ncol = 3)"},{"path":"/articles/PBMC-CITE-seq.html","id":"downstream-analysis","dir":"Articles","previous_headings":"","what":"Downstream analysis","title":"CITE-seq data with MuData and Seurat","text":"Since pbmc Seurat object, can use corresponding processing analysis functions. provide example, re-calculate cell neighbourhoods using previously computed (full dataset) MOFA factors compute non-linear embedding cells.","code":"pbmc <- FindNeighbors(pbmc, reduction = \"MOFA\", dims = 1:30) #> Computing nearest neighbor graph #> Computing SNN  pbmc <- RunUMAP(pbmc, reduction = \"MOFA\", dims = 1:30, reduction.key = \"rUMAP_\", reduction.name = \"rUMAP\") #> Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric #> To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation' #> This message will be shown once per session #> 02:12:01 UMAP embedding parameters a = 0.9922 b = 1.112 #> 02:12:01 Read 411 rows and found 30 numeric columns #> 02:12:01 Using Annoy for neighbor search, n_neighbors = 30 #> 02:12:01 Building Annoy index with metric = cosine, n_trees = 50 #> 0%   10   20   30   40   50   60   70   80   90   100% #> [----|----|----|----|----|----|----|----|----|----| #> **************************************************| #> 02:12:01 Writing NN index file to temp file /tmp/RtmpJtC2t3/file31f23bddd8b6 #> 02:12:01 Searching Annoy index using 1 thread, search_k = 3000 #> 02:12:01 Annoy recall = 100% #> 02:12:01 Commencing smooth kNN distance calibration using 1 thread #> 02:12:02 Initializing from normalized Laplacian + noise #> 02:12:02 Commencing optimization for 500 epochs, with 13582 positive edges #> 02:12:02 Optimization finished  DimPlot(pbmc, reduction = \"rUMAP\")"},{"path":"/articles/PBMC-CITE-seq.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"CITE-seq data with MuData and Seurat","text":"Muon: multimodal omics analysis framework preprint Comprehensive Integration Single-Cell Data paper mudata (Python) documentation muon documentation tutorials","code":""},{"path":"/articles/PBMC-CITE-seq.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"CITE-seq data with MuData and Seurat","text":"","code":"sessionInfo() #> R version 4.1.2 (2021-11-01) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 20.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 #> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] SeuratObject_4.0.4      Seurat_4.0.5            MuDataSeurat_0.0.0.9000 #> [4] BiocStyle_2.22.0        #>  #> loaded via a namespace (and not attached): #>   [1] Rtsne_0.15            colorspace_2.0-2      deldir_1.0-6          #>   [4] ellipsis_0.3.2        ggridges_0.5.3        rprojroot_2.0.2       #>   [7] fs_1.5.1              spatstat.data_2.1-0   farver_2.1.0          #>  [10] leiden_0.3.9          listenv_0.8.0         bit64_4.0.5           #>  [13] ggrepel_0.9.1         RSpectra_0.16-0       fansi_0.5.0           #>  [16] codetools_0.2-18      splines_4.1.2         cachem_1.0.6          #>  [19] knitr_1.36            polyclip_1.10-0       jsonlite_1.7.2        #>  [22] ica_1.0-2             cluster_2.1.2         png_0.1-7             #>  [25] uwot_0.1.11           spatstat.sparse_2.0-0 shiny_1.7.1           #>  [28] sctransform_0.3.2     BiocManager_1.30.16   compiler_4.1.2        #>  [31] httr_1.4.2            Matrix_1.3-4          fastmap_1.1.0         #>  [34] lazyeval_0.2.2        later_1.3.0           htmltools_0.5.2       #>  [37] tools_4.1.2           igraph_1.2.9          gtable_0.3.0          #>  [40] glue_1.5.1            RANN_2.6.1            reshape2_1.4.4        #>  [43] dplyr_1.0.7           Rcpp_1.0.7            scattermore_0.7       #>  [46] jquerylib_0.1.4       pkgdown_2.0.1         vctrs_0.3.8           #>  [49] nlme_3.1-153          lmtest_0.9-39         xfun_0.28             #>  [52] stringr_1.4.0         globals_0.14.0        mime_0.12             #>  [55] miniUI_0.1.1.1        lifecycle_1.0.1       irlba_2.3.5           #>  [58] goftest_1.2-3         future_1.23.0         MASS_7.3-54           #>  [61] zoo_1.8-9             scales_1.1.1          spatstat.core_2.3-2   #>  [64] ragg_1.2.0            promises_1.2.0.1      spatstat.utils_2.2-0  #>  [67] parallel_4.1.2        RColorBrewer_1.1-2    yaml_2.2.1            #>  [70] memoise_2.0.1         reticulate_1.22       pbapply_1.5-0         #>  [73] gridExtra_2.3         ggplot2_3.3.5         sass_0.4.0            #>  [76] rpart_4.1-15          stringi_1.7.6         highr_0.9             #>  [79] desc_1.4.0            rlang_0.4.12          pkgconfig_2.0.3       #>  [82] systemfonts_1.0.3     matrixStats_0.61.0    evaluate_0.14         #>  [85] lattice_0.20-45       tensor_1.5            ROCR_1.0-11           #>  [88] purrr_0.3.4           labeling_0.4.2        patchwork_1.1.1       #>  [91] htmlwidgets_1.5.4     bit_4.0.4             cowplot_1.1.1         #>  [94] tidyselect_1.1.1      parallelly_1.29.0     RcppAnnoy_0.0.19      #>  [97] plyr_1.8.6            magrittr_2.0.1        bookdown_0.24         #> [100] R6_2.5.1              generics_0.1.1        withr_2.4.3           #> [103] mgcv_1.8-38           pillar_1.6.4          fitdistrplus_1.1-6    #> [106] abind_1.4-5           survival_3.2-13       tibble_3.1.6          #> [109] future.apply_1.8.1    hdf5r_1.3.5           crayon_1.4.2          #> [112] KernSmooth_2.23-20    utf8_1.2.2            spatstat.geom_2.3-0   #> [115] plotly_4.10.0         rmarkdown_2.11        grid_4.1.2            #> [118] data.table_1.14.2     digest_0.6.29         xtable_1.8-4          #> [121] tidyr_1.1.4           httpuv_1.6.3          textshaping_0.3.6     #> [124] munsell_0.5.0         viridisLite_0.4.0     bslib_0.3.1"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Danila Bredikhin. Author, maintainer. Ilia Kats. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bredikhin D, Kats (2021). MuDataSeurat: MuData Serialization Seurat. R package version 0.0.0.9000.","code":"@Manual{,   title = {MuDataSeurat: MuData Serialization for Seurat},   author = {Danila Bredikhin and Ilia Kats},   year = {2021},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"mudataseurat","dir":"","previous_headings":"","what":"MuData Serialization for Seurat","title":"MuData Serialization for Seurat","text":"Documentation | Preprint | Discord MuDataSeurat package provides /O funcitonality .h5mu files Seurat objects. can learn multimodal data containers mudata documentation.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"MuData Serialization for Seurat","text":"","code":"remotes::install_github(\"pmbio/MuDataSeurat\")"},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"MuData Serialization for Seurat","text":"MuDataSeurat provides set /O operations multimodal data. MuDataSeurat implements WriteH5MU() saves Seurat objects .h5mu files can integrated workflows multiple programming languages, including muon Python library Muon.jl Julia library. ReadH5MU() reads .h5mu files Seurat objects. MuDataSeurat currently works Seurat objects v3 .","code":""},{"path":"/index.html","id":"writing-files","dir":"","previous_headings":"Quick start","what":"Writing files","title":"MuData Serialization for Seurat","text":"Start existing dataset, e.g. Seurat object CITE-seq data: WriteH5MU() allows save object .h5mu file: Please note standardised parts object written file, extra information specific methods, stored Seurat object, might omitted upon writing file.","code":"library(SeuratData) InstallData(\"bmcite\") bm <- LoadData(ds = \"bmcite\") library(MuDataSeurat) WriteH5MU(bm, \"bmcite.h5mu\")"},{"path":"/index.html","id":"reading-files","dir":"","previous_headings":"Quick start","what":"Reading files","title":"MuData Serialization for Seurat","text":"Please note intersection cells currently loaded Seurat object due object structure limitation. Multimodal embeddings (global .obsm slot) loaded assay.used field set default assay. Embeddings names changed order comply R & Seurat requirements conventions.","code":"bm <- ReadH5MU(\"bmcite.h5mu\")"},{"path":"/index.html","id":"relevant-projects","dir":"","previous_headings":"","what":"Relevant projects","title":"MuData Serialization for Seurat","text":"R packages multimodal /O include: MuData MultiAssayExperiment objects SeuratDisk","code":""},{"path":"/reference/ReadH5AD.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an .h5mu file and create a Seurat object. — ReadH5AD","title":"Read an .h5mu file and create a Seurat object. — ReadH5AD","text":"Read .h5mu file create Seurat object.","code":""},{"path":"/reference/ReadH5AD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an .h5mu file and create a Seurat object. — ReadH5AD","text":"","code":"ReadH5AD(file)"},{"path":"/reference/ReadH5AD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an .h5mu file and create a Seurat object. — ReadH5AD","text":"file Path .h5mu file.","code":""},{"path":"/reference/ReadH5AD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an .h5mu file and create a Seurat object. — ReadH5AD","text":"Seurat object","code":""},{"path":"/reference/ReadH5MU.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Seurat object from .h5mu file contents — ReadH5MU","title":"Create a Seurat object from .h5mu file contents — ReadH5MU","text":"Create Seurat object .h5mu file contents","code":""},{"path":"/reference/ReadH5MU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Seurat object from .h5mu file contents — ReadH5MU","text":"","code":"ReadH5MU(file)"},{"path":"/reference/ReadH5MU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Seurat object from .h5mu file contents — ReadH5MU","text":"file Path .h5mu file","code":""},{"path":"/reference/ReadH5MU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Seurat object from .h5mu file contents — ReadH5MU","text":"Seurat object '","code":""},{"path":"/reference/WriteH5AD.html","id":null,"dir":"Reference","previous_headings":"","what":"Write one assay to .h5ad — WriteH5AD","title":"Write one assay to .h5ad — WriteH5AD","text":"function writes data one assays (modalities) Seurat object .h5ad file. behavior function NAs present undefined.","code":""},{"path":"/reference/WriteH5AD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write one assay to .h5ad — WriteH5AD","text":"","code":"WriteH5AD(object, file, assay = NULL, overwrite = TRUE)  # S4 method for Seurat WriteH5AD(object, file, assay = NULL, overwrite = TRUE)"},{"path":"/reference/WriteH5AD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write one assay to .h5ad — WriteH5AD","text":"object Seurat object. file Path .h5ad file. assay Assay write; can omitted single assay object. overwrite Boolean value indicate overwrite file exists (TRUE default).","code":""},{"path":"/reference/WriteH5AD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write one assay to .h5ad — WriteH5AD","text":"following slots saved: count matrices (`@counts`, `@scale.data` `@data`), `@metadata`, `@reductions`, `@feature.loadings`, `@graphs`.","code":""},{"path":"/reference/WriteH5ADHelper.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function to write a modality (an assay) to an .h5mu file — WriteH5ADHelper","title":"A helper function to write a modality (an assay) to an .h5mu file — WriteH5ADHelper","text":"helper function write modality (assay) .h5mu file","code":""},{"path":"/reference/WriteH5ADHelper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function to write a modality (an assay) to an .h5mu file — WriteH5ADHelper","text":"","code":"WriteH5ADHelper(object, assay, root, global = FALSE)"},{"path":"/reference/WriteH5MU.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an .h5mu file with data from a Seurat object — WriteH5MU","title":"Create an .h5mu file with data from a Seurat object — WriteH5MU","text":"Save Seurat object .h5mu file. behavior function NAs present undefined.","code":""},{"path":"/reference/WriteH5MU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an .h5mu file with data from a Seurat object — WriteH5MU","text":"","code":"WriteH5MU(object, file, overwrite = TRUE)  # S4 method for Seurat WriteH5MU(object, file, overwrite = TRUE)"},{"path":"/reference/WriteH5MU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an .h5mu file with data from a Seurat object — WriteH5MU","text":"object Seurat object. file Path .h5mu file. overwrite Boolean value indicate overwrite file exists (TRUE default).","code":""},{"path":"/reference/WriteH5MU.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an .h5mu file with data from a Seurat object — WriteH5MU","text":"following slots saved: count matrices (`@counts`, `@scale.data` `@data`), `@metadata`, `@reductions`, `@feature.loadings`, `@graphs`.","code":""}]
